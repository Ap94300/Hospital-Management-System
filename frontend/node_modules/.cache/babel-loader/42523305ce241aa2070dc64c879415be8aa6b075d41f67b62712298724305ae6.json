{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\hospital system\\\\src\\\\components\\\\HospitalList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Sample data for hospitals\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hospitalsData = [{\n  id: 1,\n  name: 'City Hospital',\n  city: 'New York'\n}, {\n  id: 2,\n  name: 'General Hospital',\n  city: 'Los Angeles'\n}, {\n  id: 3,\n  name: 'Community Health Center',\n  city: 'Chicago'\n}, {\n  id: 4,\n  name: 'Metro Hospital',\n  city: 'New York'\n}, {\n  id: 5,\n  name: 'Sunshine Hospital',\n  city: 'Los Angeles'\n}];\nconst HospitalList = () => {\n  _s();\n  const [selectedCity, setSelectedCity] = useState('All');\n\n  // Get unique cities from the hospital data\n  const cities = ['All', ...new Set(hospitalsData.map(hospital => hospital.city))];\n\n  // Filter hospitals based on selected city\n  const filteredHospitals = selectedCity === 'All' ? hospitalsData : hospitalsData.filter(hospital => hospital.city === selectedCity);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hospital-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hospitals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"city-select\",\n      children: \"Select City:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"city-select\",\n      value: selectedCity,\n      onChange: e => setSelectedCity(e.target.value),\n      children: cities.map((city, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredHospitals.map(hospital => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [hospital.name, \" - \", hospital.city]\n      }, hospital.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(HospitalList, \"ZkF9qJAXwAedt74JK/kHXwGvW2w=\");\n_c = HospitalList;\nexport default HospitalList;\nvar _c;\n$RefreshReg$(_c, \"HospitalList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","hospitalsData","id","name","city","HospitalList","_s","selectedCity","setSelectedCity","cities","Set","map","hospital","filteredHospitals","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","index","_c","$RefreshReg$"],"sources":["D:/MERN STACK/hospital system/src/components/HospitalList.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Sample data for hospitals\r\nconst hospitalsData = [\r\n    { id: 1, name: 'City Hospital', city: 'New York' },\r\n    { id: 2, name: 'General Hospital', city: 'Los Angeles' },\r\n    { id: 3, name: 'Community Health Center', city: 'Chicago' },\r\n    { id: 4, name: 'Metro Hospital', city: 'New York' },\r\n    { id: 5, name: 'Sunshine Hospital', city: 'Los Angeles' },\r\n];\r\n\r\nconst HospitalList = () => {\r\n    const [selectedCity, setSelectedCity] = useState('All');\r\n\r\n    // Get unique cities from the hospital data\r\n    const cities = ['All', ...new Set(hospitalsData.map(hospital => hospital.city))];\r\n\r\n    // Filter hospitals based on selected city\r\n    const filteredHospitals = selectedCity === 'All' \r\n        ? hospitalsData \r\n        : hospitalsData.filter(hospital => hospital.city === selectedCity);\r\n\r\n    return (\r\n        <div className=\"hospital-list\">\r\n            <h2>Hospitals</h2>\r\n            <label htmlFor=\"city-select\">Select City:</label>\r\n            <select \r\n                id=\"city-select\" \r\n                value={selectedCity} \r\n                onChange={(e) => setSelectedCity(e.target.value)}\r\n            >\r\n                {cities.map((city, index) => (\r\n                    <option key={index} value={city}>{city}</option>\r\n                ))}\r\n            </select>\r\n\r\n            <ul>\r\n                {filteredHospitals.map(hospital => (\r\n                    <li key={hospital.id}>{hospital.name} - {hospital.city}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HospitalList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG,CAClB;EAAEC,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,eAAe;EAAEC,IAAI,EAAE;AAAW,CAAC,EAClD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,kBAAkB;EAAEC,IAAI,EAAE;AAAc,CAAC,EACxD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,yBAAyB;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC3D;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,gBAAgB;EAAEC,IAAI,EAAE;AAAW,CAAC,EACnD;EAAEF,EAAE,EAAE,CAAC;EAAEC,IAAI,EAAE,mBAAmB;EAAEC,IAAI,EAAE;AAAc,CAAC,CAC5D;AAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAMW,MAAM,GAAG,CAAC,KAAK,EAAE,GAAG,IAAIC,GAAG,CAACT,aAAa,CAACU,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACR,IAAI,CAAC,CAAC,CAAC;;EAEhF;EACA,MAAMS,iBAAiB,GAAGN,YAAY,KAAK,KAAK,GAC1CN,aAAa,GACbA,aAAa,CAACa,MAAM,CAACF,QAAQ,IAAIA,QAAQ,CAACR,IAAI,KAAKG,YAAY,CAAC;EAEtE,oBACIP,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BhB,OAAA;MAAAgB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBpB,OAAA;MAAOqB,OAAO,EAAC,aAAa;MAAAL,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjDpB,OAAA;MACIE,EAAE,EAAC,aAAa;MAChBoB,KAAK,EAAEf,YAAa;MACpBgB,QAAQ,EAAGC,CAAC,IAAKhB,eAAe,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAAAN,QAAA,EAEhDP,MAAM,CAACE,GAAG,CAAC,CAACP,IAAI,EAAEsB,KAAK,kBACpB1B,OAAA;QAAoBsB,KAAK,EAAElB,IAAK;QAAAY,QAAA,EAAEZ;MAAI,GAAzBsB,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA6B,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAETpB,OAAA;MAAAgB,QAAA,EACKH,iBAAiB,CAACF,GAAG,CAACC,QAAQ,iBAC3BZ,OAAA;QAAAgB,QAAA,GAAuBJ,QAAQ,CAACT,IAAI,EAAC,KAAG,EAACS,QAAQ,CAACR,IAAI;MAAA,GAA7CQ,QAAQ,CAACV,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuC,CAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACd,EAAA,CAhCID,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}