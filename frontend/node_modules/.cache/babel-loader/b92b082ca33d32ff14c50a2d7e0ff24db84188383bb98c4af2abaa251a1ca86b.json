{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN STACK\\\\hospital system\\\\src\\\\components\\\\QA Bot.js\",\n  _s = $RefreshSig$();\n// components/QnABot.js\nimport React, { useState } from 'react';\nimport { OpenAI } from 'openai';\nimport './QA Bot.css'; // Import the CSS file\n\n// Sample hospital data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hospitalsData = [{\n  id: 1,\n  name: 'All India Institute of Medical Sciences (AIIMS)',\n  city: 'New Delhi',\n  description: 'A premier medical institution providing comprehensive healthcare services.'\n}, {\n  id: 2,\n  name: 'Apollo Hospital',\n  city: 'Chennai',\n  description: 'One of the largest healthcare groups in Asia, known for its advanced medical technology.'\n}, {\n  id: 3,\n  name: 'Fortis Hospital',\n  city: 'Noida',\n  description: 'A multi-specialty hospital offering a wide range of healthcare services.'\n}, {\n  id: 4,\n  name: 'Max Super Specialty Hospital',\n  city: 'New Delhi',\n  description: 'A leading healthcare provider with a focus on patient-centric care.'\n}, {\n  id: 5,\n  name: 'Manipal Hospital',\n  city: 'Bangalore',\n  description: 'A renowned hospital known for its quality healthcare and advanced medical facilities.'\n}, {\n  id: 6,\n  name: 'Kokilaben Dhirubhai Ambani Hospital',\n  city: 'Mumbai',\n  description: 'A state-of-the-art hospital offering comprehensive healthcare services.'\n}, {\n  id: 7,\n  name: 'Tata Memorial Hospital',\n  city: 'Mumbai',\n  description: 'A specialized cancer treatment and research center.'\n}, {\n  id: 8,\n  name: 'Christian Medical College (CMC)',\n  city: 'Vellore',\n  description: 'A prestigious medical institution known for its quality education and healthcare.'\n}, {\n  id: 9,\n  name: 'Narayana Health',\n  city: 'Bangalore',\n  description: 'A multi-specialty hospital chain known for its affordable healthcare.'\n}, {\n  id: 10,\n  name: 'PGIMER',\n  city: 'Chandigarh',\n  description: 'A leading medical and research institution in India.'\n}, {\n  id: 11,\n  name: 'Artemis Hospital',\n  city: 'Gurgaon',\n  description: 'A state-of-the-art hospital offering advanced medical care with a focus on patient-centric services.'\n}, {\n  id: 12,\n  name: 'Medanta - The Medicity',\n  city: 'Gurgaon',\n  description: 'A multi-specialty hospital known for its advanced medical technology and world-class healthcare services.'\n}, {\n  id: 13,\n  name: 'Jaslok Hospital',\n  city: 'Mumbai',\n  description: 'A leading hospital in Mumbai known for its excellence in healthcare and patient care.'\n}, {\n  id: 14,\n  name: 'Ruby Hall Clinic',\n  city: 'Pune',\n  description: 'A well-known hospital in Pune offering comprehensive healthcare services.'\n}, {\n  id: 15,\n  name: 'Columbia Asia Hospital',\n  city: 'Bangalore',\n  description: 'A trusted hospital chain providing high-quality healthcare services across India.'\n}, {\n  id: 16,\n  name: 'Global Hospitals',\n  city: 'Hyderabad',\n  description: 'A leading hospital in Hyderabad known for its advanced medical care and patient-centric approach.'\n}, {\n  id: 17,\n  name: 'BLK Super Specialty Hospital',\n  city: 'New Delhi',\n  description: 'A premier hospital in Delhi offering world-class healthcare services.'\n}, {\n  id: 18,\n  name: 'Wockhardt Hospital',\n  city: 'Mumbai',\n  description: 'A trusted hospital in Mumbai known for its advanced medical care and patient-friendly services.'\n}, {\n  id: 19,\n  name: 'Sir Ganga Ram Hospital',\n  city: 'New Delhi',\n  description: 'A renowned hospital in Delhi providing high-quality healthcare services.'\n}, {\n  id: 20,\n  name: 'Sahyadri Hospitals',\n  city: 'Pune',\n  description: 'A leading hospital chain in Pune offering comprehensive healthcare services.'\n}, {\n  id: 21,\n  name: 'Lilavati Hospital',\n  city: 'Mumbai',\n  description: 'A well-known hospital in Mumbai offering advanced medical care and patient-centric services.'\n}, {\n  id: 22,\n  name: 'Breach Candy Hospital',\n  city: 'Mumbai',\n  description: 'A prestigious hospital in Mumbai known for its high-quality healthcare services.'\n}, {\n  id: 23,\n  name: 'KIMS Hospital',\n  city: 'Hyderabad',\n  description: 'A leading hospital in Hyderabad offering advanced medical care and specialized treatments.'\n}, {\n  id: 24,\n  name: 'Amrita Hospital',\n  city: 'Kochi',\n  description: 'A renowned hospital in Kerala known for its advanced medical facilities and patient care.'\n}, {\n  id: 25,\n  name: 'Sanjay Gandhi Postgraduate Institute of Medical Sciences (SGPGI)',\n  city: 'Lucknow',\n  description: 'A premier medical institution in Lucknow offering specialized healthcare services.'\n}, {\n  id: 26,\n  name: 'Sri Ramachandra Medical Centre',\n  city: 'Chennai',\n  description: 'A leading hospital in Chennai known for its advanced medical care and research.'\n}, {\n  id: 27,\n  name: 'Rajiv Gandhi Cancer Institute and Research Centre',\n  city: 'New Delhi',\n  description: 'A specialized cancer hospital in Delhi offering advanced treatment options.'\n}, {\n  id: 28,\n  name: 'Aditya Birla Memorial Hospital',\n  city: 'Pune',\n  description: 'A well-known hospital in Pune offering comprehensive healthcare services.'\n}, {\n  id: 29,\n  name: 'Care Hospitals',\n  city: 'Hyderabad',\n  description: 'A trusted hospital chain in Hyderabad known for its advanced medical care and patient-centric approach.'\n}, {\n  id: 30,\n  name: 'Hiranandani Hospital',\n  city: 'Mumbai',\n  description: 'A leading hospital in Mumbai offering advanced medical care and specialized treatments.'\n}];\nconst QnABot = () => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [answer, setAnswer] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  // Function to retrieve relevant hospital data based on the query\n  const retrieveRelevantData = query => {\n    const lowerCaseQuery = query.toLowerCase();\n    return hospitalsData.filter(hospital => hospital.name.toLowerCase().includes(lowerCaseQuery) || hospital.city.toLowerCase().includes(lowerCaseQuery) || hospital.description.toLowerCase().includes(lowerCaseQuery));\n  };\n\n  // Function to generate an answer based on the query\n  const generateAnswer = async query => {\n    const lowerCaseQuery = query.toLowerCase();\n\n    // Handle greetings\n    if (lowerCaseQuery === 'hi' || lowerCaseQuery === 'hello') {\n      return 'Hello! How can I assist you today?';\n    }\n\n    // Retrieve relevant hospital data\n    const relevantData = retrieveRelevantData(query);\n\n    // If no relevant data found, return a fallback message\n    if (relevantData.length === 0) {\n      return 'I\\'m sorry, I didn\\'t understand that. Can you please ask something else?';\n    }\n\n    // If relevant data is found, format the response\n    return relevantData.map(hospital => `${hospital.name} located in ${hospital.city}. ${hospital.description}`).join('\\n');\n  };\n\n  // Handle user query submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      // Generate an answer based on the query\n      const generatedAnswer = await generateAnswer(query);\n      setAnswer(generatedAnswer);\n    } catch (error) {\n      console.error('Error generating answer:', error);\n      setAnswer('Sorry, something went wrong. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qna-bot\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Hospital Q&A Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask a question about hospitals...\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Generating Answer...' : 'Ask'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), answer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(QnABot, \"5yiuvnDI1xKptig2Iky2Sq425RQ=\");\n_c = QnABot;\nexport default QnABot;\nvar _c;\n$RefreshReg$(_c, \"QnABot\");","map":{"version":3,"names":["React","useState","OpenAI","jsxDEV","_jsxDEV","hospitalsData","id","name","city","description","QnABot","_s","query","setQuery","answer","setAnswer","loading","setLoading","retrieveRelevantData","lowerCaseQuery","toLowerCase","filter","hospital","includes","generateAnswer","relevantData","length","map","join","handleSubmit","e","preventDefault","generatedAnswer","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["D:/MERN STACK/hospital system/src/components/QA Bot.js"],"sourcesContent":["// components/QnABot.js\r\nimport React, { useState } from 'react';\r\nimport { OpenAI } from 'openai';\r\nimport './QA Bot.css'; // Import the CSS file\r\n\r\n// Sample hospital data\r\nconst hospitalsData = [\r\n    { id: 1, name: 'All India Institute of Medical Sciences (AIIMS)', city: 'New Delhi', description: 'A premier medical institution providing comprehensive healthcare services.' },\r\n    { id: 2, name: 'Apollo Hospital', city: 'Chennai', description: 'One of the largest healthcare groups in Asia, known for its advanced medical technology.' },\r\n    { id: 3, name: 'Fortis Hospital', city: 'Noida', description: 'A multi-specialty hospital offering a wide range of healthcare services.' },\r\n    { id: 4, name: 'Max Super Specialty Hospital', city: 'New Delhi', description: 'A leading healthcare provider with a focus on patient-centric care.' },\r\n    { id: 5, name: 'Manipal Hospital', city: 'Bangalore', description: 'A renowned hospital known for its quality healthcare and advanced medical facilities.' },\r\n    { id: 6, name: 'Kokilaben Dhirubhai Ambani Hospital', city: 'Mumbai', description: 'A state-of-the-art hospital offering comprehensive healthcare services.' },\r\n    { id: 7, name: 'Tata Memorial Hospital', city: 'Mumbai', description: 'A specialized cancer treatment and research center.' },\r\n    { id: 8, name: 'Christian Medical College (CMC)', city: 'Vellore', description: 'A prestigious medical institution known for its quality education and healthcare.' },\r\n    { id: 9, name: 'Narayana Health', city: 'Bangalore', description: 'A multi-specialty hospital chain known for its affordable healthcare.' },\r\n    { id: 10, name: 'PGIMER', city: 'Chandigarh', description: 'A leading medical and research institution in India.' },\r\n    { id: 11, name: 'Artemis Hospital', city: 'Gurgaon', description: 'A state-of-the-art hospital offering advanced medical care with a focus on patient-centric services.' },\r\n    { id: 12, name: 'Medanta - The Medicity', city: 'Gurgaon', description: 'A multi-specialty hospital known for its advanced medical technology and world-class healthcare services.' },\r\n    { id: 13, name: 'Jaslok Hospital', city: 'Mumbai', description: 'A leading hospital in Mumbai known for its excellence in healthcare and patient care.' },\r\n    { id: 14, name: 'Ruby Hall Clinic', city: 'Pune', description: 'A well-known hospital in Pune offering comprehensive healthcare services.' },\r\n    { id: 15, name: 'Columbia Asia Hospital', city: 'Bangalore', description: 'A trusted hospital chain providing high-quality healthcare services across India.' },\r\n    { id: 16, name: 'Global Hospitals', city: 'Hyderabad', description: 'A leading hospital in Hyderabad known for its advanced medical care and patient-centric approach.' },\r\n    { id: 17, name: 'BLK Super Specialty Hospital', city: 'New Delhi', description: 'A premier hospital in Delhi offering world-class healthcare services.' },\r\n    { id: 18, name: 'Wockhardt Hospital', city: 'Mumbai', description: 'A trusted hospital in Mumbai known for its advanced medical care and patient-friendly services.' },\r\n    { id: 19, name: 'Sir Ganga Ram Hospital', city: 'New Delhi', description: 'A renowned hospital in Delhi providing high-quality healthcare services.' },\r\n    { id: 20, name: 'Sahyadri Hospitals', city: 'Pune', description: 'A leading hospital chain in Pune offering comprehensive healthcare services.' },\r\n    { id: 21, name: 'Lilavati Hospital', city: 'Mumbai', description: 'A well-known hospital in Mumbai offering advanced medical care and patient-centric services.' },\r\n    { id: 22, name: 'Breach Candy Hospital', city: 'Mumbai', description: 'A prestigious hospital in Mumbai known for its high-quality healthcare services.' },\r\n    { id: 23, name: 'KIMS Hospital', city: 'Hyderabad', description: 'A leading hospital in Hyderabad offering advanced medical care and specialized treatments.' },\r\n    { id: 24, name: 'Amrita Hospital', city: 'Kochi', description: 'A renowned hospital in Kerala known for its advanced medical facilities and patient care.' },\r\n    { id: 25, name: 'Sanjay Gandhi Postgraduate Institute of Medical Sciences (SGPGI)', city: 'Lucknow', description: 'A premier medical institution in Lucknow offering specialized healthcare services.' },\r\n    { id: 26, name: 'Sri Ramachandra Medical Centre', city: 'Chennai', description: 'A leading hospital in Chennai known for its advanced medical care and research.' },\r\n    { id: 27, name: 'Rajiv Gandhi Cancer Institute and Research Centre', city: 'New Delhi', description: 'A specialized cancer hospital in Delhi offering advanced treatment options.' },\r\n    { id: 28, name: 'Aditya Birla Memorial Hospital', city: 'Pune', description: 'A well-known hospital in Pune offering comprehensive healthcare services.' },\r\n    { id: 29, name: 'Care Hospitals', city: 'Hyderabad', description: 'A trusted hospital chain in Hyderabad known for its advanced medical care and patient-centric approach.' },\r\n    { id: 30, name: 'Hiranandani Hospital', city: 'Mumbai', description: 'A leading hospital in Mumbai offering advanced medical care and specialized treatments.' },\r\n];\r\n\r\nconst QnABot = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [answer, setAnswer] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    // Function to retrieve relevant hospital data based on the query\r\n    const retrieveRelevantData = (query) => {\r\n        const lowerCaseQuery = query.toLowerCase();\r\n        return hospitalsData.filter(hospital => \r\n            hospital.name.toLowerCase().includes(lowerCaseQuery) ||\r\n            hospital.city.toLowerCase().includes(lowerCaseQuery) ||\r\n            hospital.description.toLowerCase().includes(lowerCaseQuery)\r\n        );\r\n    };\r\n\r\n    // Function to generate an answer based on the query\r\n    const generateAnswer = async (query) => {\r\n        const lowerCaseQuery = query.toLowerCase();\r\n\r\n        // Handle greetings\r\n        if (lowerCaseQuery === 'hi' || lowerCaseQuery === 'hello') {\r\n            return 'Hello! How can I assist you today?';\r\n        }\r\n\r\n        // Retrieve relevant hospital data\r\n        const relevantData = retrieveRelevantData(query);\r\n\r\n        // If no relevant data found, return a fallback message\r\n        if (relevantData.length === 0) {\r\n            return 'I\\'m sorry, I didn\\'t understand that. Can you please ask something else?';\r\n        }\r\n\r\n        // If relevant data is found, format the response\r\n        return relevantData.map(hospital => (\r\n            `${hospital.name} located in ${hospital.city}. ${hospital.description}`\r\n        )).join('\\n');\r\n    };\r\n\r\n    // Handle user query submission\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        try {\r\n            // Generate an answer based on the query\r\n            const generatedAnswer = await generateAnswer(query);\r\n            setAnswer(generatedAnswer);\r\n        } catch (error) {\r\n            console.error('Error generating answer:', error);\r\n            setAnswer('Sorry, something went wrong. Please try again.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"qna-bot\">\r\n            <h2>Hospital Q&A Bot</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={query}\r\n                    onChange={(e) => setQuery(e.target.value)}\r\n                    placeholder=\"Ask a question about hospitals...\"\r\n                    required\r\n                />\r\n                <button type=\"submit\" disabled={loading}>\r\n                    {loading ? 'Generating Answer...' : 'Ask'}\r\n                </button>\r\n            </form>\r\n\r\n            {answer && (\r\n                <div className=\"answer\">\r\n                    <h3>Answer:</h3>\r\n                    <p>{answer}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QnABot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}